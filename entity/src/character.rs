//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "character")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub user_id: i64,
    pub channel_id: Option<i64>,
    #[sea_orm(column_type = "Text")]
    pub name: String,
    #[sea_orm(column_type = "Text")]
    pub notes: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub link: Option<String>,
    pub created: DateTimeUtc,
    pub updated: DateTimeUtc,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::active_character::Entity")]
    ActiveCharacter,
}

impl Related<super::active_character::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ActiveCharacter.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
